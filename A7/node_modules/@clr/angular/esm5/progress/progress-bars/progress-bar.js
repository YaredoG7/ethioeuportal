/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/*
 * Copyright (c) 2016-2019 VMware, Inc. All Rights Reserved.
 * This software is released under MIT license.
 * The full license information can be found in LICENSE in the root directory of this project.
 */
import { Component, Input, HostBinding } from '@angular/core';
import { isBooleanAttributeSet } from '../../utils/component/is-boolean-attribute-set';
var ClrProgressBar = /** @class */ (function () {
    function ClrProgressBar() {
        this.externalId = '';
        // Progress
        this.max = 100;
        this.value = 0;
    }
    Object.defineProperty(ClrProgressBar.prototype, "id", {
        get: /**
         * @return {?}
         */
        function () {
            return this._ID;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._ID = value;
            this.externalId = null;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "progressClass", {
        // Styles
        get: 
        // Styles
        /**
         * @return {?}
         */
        function () {
            return true;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "labeledClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._labeled;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrLabeled", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._labeled = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "fadeClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._fade;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrFade", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._fade = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "loopClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._loop;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrLoop", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._loop = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "successClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._success;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrSuccess", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._success = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "dangerClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._danger;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrDanger", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._danger = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "flashClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._flash;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrFlash", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._flash = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "flashDangerClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._flashDanger;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "clrFlashDanger", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._flashDanger = isBooleanAttributeSet(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClrProgressBar.prototype, "displayValue", {
        /**
         * Make sure that we always will have something that is readable
         * for the screen reader
         */
        get: /**
         * Make sure that we always will have something that is readable
         * for the screen reader
         * @return {?}
         */
        function () {
            if (this.displayval) {
                return this.displayval;
            }
            return this.value + "%";
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Display aria-live only when there is value and it's not 0 or equal to the max value
     */
    /**
     * Display aria-live only when there is value and it's not 0 or equal to the max value
     * @return {?}
     */
    ClrProgressBar.prototype.displayAriaLive = /**
     * Display aria-live only when there is value and it's not 0 or equal to the max value
     * @return {?}
     */
    function () {
        return (this.value !== undefined || this.value !== 0) && this.value !== this.max;
    };
    Object.defineProperty(ClrProgressBar.prototype, "ariaLive", {
        get: /**
         * @return {?}
         */
        function () {
            if (isBooleanAttributeSet(this.assertive)) {
                return 'assertive';
            }
            if (isBooleanAttributeSet(this.off)) {
                return 'off';
            }
            return 'polite';
        },
        enumerable: true,
        configurable: true
    });
    ClrProgressBar.decorators = [
        { type: Component, args: [{
                    selector: 'clr-progress-bar',
                    template: "\n    <progress [id]=\"id\" [attr.max]=\"max\" [attr.value]=\"value\" [attr.data-displayval]=\"displayValue\"></progress>\n    <span *ngIf=\"displayAriaLive()\" [attr.aria-live]=\"ariaLive\">{{ displayValue }}</span>\n  "
                }] }
    ];
    ClrProgressBar.propDecorators = {
        externalId: [{ type: HostBinding, args: ['attr.id',] }],
        id: [{ type: Input }],
        max: [{ type: Input, args: ['clrMax',] }],
        value: [{ type: Input, args: ['clrValue',] }],
        displayval: [{ type: Input, args: ['clrDisplayval',] }],
        progressClass: [{ type: HostBinding, args: ['class.progress',] }],
        labeledClass: [{ type: HostBinding, args: ['class.labeled',] }],
        clrLabeled: [{ type: Input, args: ['clrLabeled',] }],
        fadeClass: [{ type: HostBinding, args: ['class.progress-fade',] }],
        clrFade: [{ type: Input, args: ['clrFade',] }],
        loopClass: [{ type: HostBinding, args: ['class.loop',] }],
        clrLoop: [{ type: Input, args: ['clrLoop',] }],
        successClass: [{ type: HostBinding, args: ['class.success',] }],
        clrSuccess: [{ type: Input, args: ['clrSuccess',] }],
        dangerClass: [{ type: HostBinding, args: ['class.danger',] }],
        clrDanger: [{ type: Input, args: ['clrDanger',] }],
        flashClass: [{ type: HostBinding, args: ['class.flash',] }],
        clrFlash: [{ type: Input, args: ['clrFlash',] }],
        flashDangerClass: [{ type: HostBinding, args: ['class.flash-danger',] }],
        clrFlashDanger: [{ type: Input, args: ['clrFlashDanger',] }],
        assertive: [{ type: Input, args: ['clrAssertive',] }],
        off: [{ type: Input, args: ['clrOff',] }]
    };
    return ClrProgressBar;
}());
export { ClrProgressBar };
if (false) {
    /**
     * Handle component ID
     * @type {?}
     */
    ClrProgressBar.prototype._ID;
    /** @type {?} */
    ClrProgressBar.prototype.externalId;
    /** @type {?} */
    ClrProgressBar.prototype.max;
    /** @type {?} */
    ClrProgressBar.prototype.value;
    /** @type {?} */
    ClrProgressBar.prototype.displayval;
    /** @type {?} */
    ClrProgressBar.prototype._labeled;
    /** @type {?} */
    ClrProgressBar.prototype._fade;
    /** @type {?} */
    ClrProgressBar.prototype._loop;
    /** @type {?} */
    ClrProgressBar.prototype._success;
    /** @type {?} */
    ClrProgressBar.prototype._danger;
    /** @type {?} */
    ClrProgressBar.prototype._flash;
    /** @type {?} */
    ClrProgressBar.prototype._flashDanger;
    /** @type {?} */
    ClrProgressBar.prototype.assertive;
    /** @type {?} */
    ClrProgressBar.prototype.off;
}
//# sourceMappingURL=data:application/json;base64,